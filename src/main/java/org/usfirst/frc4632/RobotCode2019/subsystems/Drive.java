// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4632.RobotCode2019.subsystems;


import org.usfirst.frc4632.RobotCode2019.Robot;
import org.usfirst.frc4632.RobotCode2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Talon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drive extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
    public static final double slow = 0.2;
    public static final double normal = 0.6;
    public static final double fast = 0.8;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Talon leftFront;
    private Talon leftBack;
    private SpeedControllerGroup leftSide;
    private Talon rightFront;
    private Talon rightBack;
    private SpeedControllerGroup rightSide;
    private RobotDrive robotDrive21;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Drive() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        leftFront = new Talon(1);
        addChild("LeftFront",leftFront);
        leftFront.setInverted(false);
        
        leftBack = new Talon(2);
        addChild("LeftBack",leftBack);
        leftBack.setInverted(false);
        
        leftSide = new SpeedControllerGroup(leftFront, leftBack  );
        addChild("LeftSide",leftSide);
        
        
        rightFront = new Talon(3);
        addChild("RightFront",rightFront);
        rightFront.setInverted(false);
        
        rightBack = new Talon(4);
        addChild("RightBack",rightBack);
        rightBack.setInverted(false);
        
        rightSide = new SpeedControllerGroup(rightFront, rightBack  );
        addChild("RightSide",rightSide);
        
        
        robotDrive21 = new RobotDrive(leftSide, rightSide);
        
        robotDrive21.setSafetyEnabled(true);
        robotDrive21.setExpiration(0.1);
        robotDrive21.setSensitivity(0.5);
        robotDrive21.setMaxOutput(1.0);
        robotDrive21.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void forward(double speed) {

        robotDrive21.drive(speed, 0.0);
    }

    public void backward(double speed) {

        robotDrive21.drive(speed, 0.0);
    }

}

